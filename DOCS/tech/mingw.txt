Cross compiling from Linux to Windows/mingw32
=============================================

First install a mingw environment on your system.
One way is using the mingw-cross-env script from http://mingw-cross-env.nongnu.org/
Apply mingw patch below.

Make sure the cross compiler toolchain (e.g. i686-pc-mingw32-gcc) is in your $PATH.

Then run this in the mplayer source directory:

./configure --enable-cross-compile --target=i686-mingw32 --with-pkg-config=i686-pc-mingw32-pkg-config --cc=i686-pc-mingw32-gcc --windres=i686-pc-mingw32-windres --ranlib=i686-pc-mingw32-ranlib --with-freetype-config=/path/to/mingw/usr/i686-pc-mingw32/bin/freetype-config

"make" should then produce a mplayer.exe.

Note that --target does not specify a cross compilation prefix. The configure
script will attempt to parse it, and can fail silently if it contains unexpected
strings. As of this writing, there is no way to specify a cross compilation
prefix.

Specifying the full path to freetype-config is needed to avoid using the host's
freetype installation, as it's not prefixed.

libass and ffmpeg are included in mingw-cross-env and should be no problem. The
cross pkg-config should find them if they are installed.

Mingw patch
===========

The following patch is needed, because ming doesn't provide a C99 inttypes.h. We
rely on C99 semantics for printf (and related functions) by using the feature
enabled by __USE_MINGW_ANSI_STDIO, which in turn is enabled by _GNU_SOURCE.
Since the macros in inttypes.h as of this writing _always_ define values for the
Microsoft CRT, we can't use them. This relatively long but very boring patch
changes the definitions of the macros, that are incorrect if
__USE_MINGW_ANSI_STDIO is enabled, to C99.

Note: if you don't apply this patch, it's probably better to define
__USE_MINGW_ANSI_STDIO to 0 (disable C99 format strings) when compiling mplayer.
It will still be incorrect, though.

I bet $5 that this patch still won't be in mingw (or this problem still
unsolved) in 5 years.

--- inttypes_orig.h     2010-03-07 04:31:41.000000000 +0100
+++ inttypes.h  2011-10-21 23:52:41.000000000 +0200
@@ -31,55 +31,42 @@
 #define PRId8 "d"
 #define PRId16 "d"
 #define PRId32 "d"
-#define PRId64 "I64d"

 #define PRIdLEAST8 "d"
 #define PRIdLEAST16 "d"
 #define PRIdLEAST32 "d"
-#define PRIdLEAST64 "I64d"

 #define PRIdFAST8 "d"
 #define PRIdFAST16 "d"
 #define PRIdFAST32 "d"
-#define PRIdFAST64 "I64d"

-#define PRIdMAX "I64d"
 #define PRIdPTR "d"

 #define PRIi8 "i"
 #define PRIi16 "i"
 #define PRIi32 "i"
-#define PRIi64 "I64i"

 #define PRIiLEAST8 "i"
 #define PRIiLEAST16 "i"
 #define PRIiLEAST32 "i"
-#define PRIiLEAST64 "I64i"

 #define PRIiFAST8 "i"
 #define PRIiFAST16 "i"
 #define PRIiFAST32 "i"
-#define PRIiFAST64 "I64i"

-#define PRIiMAX "I64i"
 #define PRIiPTR "i"

 #define PRIo8 "o"
 #define PRIo16 "o"
 #define PRIo32 "o"
-#define PRIo64 "I64o"

 #define PRIoLEAST8 "o"
 #define PRIoLEAST16 "o"
 #define PRIoLEAST32 "o"
-#define PRIoLEAST64 "I64o"

 #define PRIoFAST8 "o"
 #define PRIoFAST16 "o"
 #define PRIoFAST32 "o"
-#define PRIoFAST64 "I64o"
-
-#define PRIoMAX "I64o"

 #define PRIoPTR "o"

@@ -87,58 +74,101 @@
 #define PRIu8 "u"
 #define PRIu16 "u"
 #define PRIu32 "u"
-#define PRIu64 "I64u"
-

 #define PRIuLEAST8 "u"
 #define PRIuLEAST16 "u"
 #define PRIuLEAST32 "u"
-#define PRIuLEAST64 "I64u"

 #define PRIuFAST8 "u"
 #define PRIuFAST16 "u"
 #define PRIuFAST32 "u"
-#define PRIuFAST64 "I64u"

-#define PRIuMAX "I64u"
 #define PRIuPTR "u"

 #define PRIx8 "x"
 #define PRIx16 "x"
 #define PRIx32 "x"
-#define PRIx64 "I64x"

 #define PRIxLEAST8 "x"
 #define PRIxLEAST16 "x"
 #define PRIxLEAST32 "x"
-#define PRIxLEAST64 "I64x"

 #define PRIxFAST8 "x"
 #define PRIxFAST16 "x"
 #define PRIxFAST32 "x"
-#define PRIxFAST64 "I64x"

-#define PRIxMAX "I64x"
 #define PRIxPTR "x"

 #define PRIX8 "X"
 #define PRIX16 "X"
 #define PRIX32 "X"
-#define PRIX64 "I64X"

 #define PRIXLEAST8 "X"
 #define PRIXLEAST16 "X"
 #define PRIXLEAST32 "X"
-#define PRIXLEAST64 "I64X"

 #define PRIXFAST8 "X"
 #define PRIXFAST16 "X"
 #define PRIXFAST32 "X"
-#define PRIXFAST64 "I64X"

-#define PRIXMAX "I64X"
 #define PRIXPTR "X"

+#if __USE_MINGW_ANSI_STDIO
+
+#define PRId64 "lld"
+#define PRIdLEAST64 "lld"
+#define PRIdFAST64 "lld"
+#define PRIdMAX "lld"
+#define PRIi64 "lli"
+#define PRIiLEAST64 "lli"
+#define PRIiFAST64 "lli"
+#define PRIiMAX "lli"
+#define PRIo64 "llo"
+#define PRIoLEAST64 "llo"
+#define PRIoFAST64 "llo"
+#define PRIoMAX "llo"
+#define PRIu64 "llu"
+#define PRIuLEAST64 "llu"
+#define PRIuFAST64 "llu"
+#define PRIuMAX "llu"
+#define PRIx64 "llx"
+#define PRIxLEAST64 "llx"
+#define PRIxFAST64 "llx"
+#define PRIxMAX "llx"
+#define PRIX64 "llX"
+#define PRIXLEAST64 "llX"
+#define PRIXFAST64 "llX"
+#define PRIXMAX "llX"
+
+#else
+
+#define PRId64 "I64d"
+#define PRIdLEAST64 "I64d"
+#define PRIdFAST64 "I64d"
+#define PRIdMAX "I64d"
+#define PRIi64 "I64i"
+#define PRIiLEAST64 "I64i"
+#define PRIiFAST64 "I64i"
+#define PRIiMAX "I64i"
+#define PRIo64 "I64o"
+#define PRIoLEAST64 "I64o"
+#define PRIoFAST64 "I64o"
+#define PRIoMAX "I64o"
+#define PRIu64 "I64u"
+#define PRIuLEAST64 "I64u"
+#define PRIuFAST64 "I64u"
+#define PRIuMAX "I64u"
+#define PRIx64 "I64x"
+#define PRIxLEAST64 "I64x"
+#define PRIxFAST64 "I64x"
+#define PRIxMAX "I64x"
+#define PRIX64 "I64X"
+#define PRIXLEAST64 "I64X"
+#define PRIXFAST64 "I64X"
+#define PRIXMAX "I64X"
+
+#endif
+
 /*
  *   fscanf macros for signed int types
  *   NOTE: if 32-bit int is used for int_fast8_t and int_fast16_t
@@ -148,62 +178,46 @@

 #define SCNd16 "hd"
 #define SCNd32 "d"
-#define SCNd64 "I64d"

 #define SCNdLEAST16 "hd"
 #define SCNdLEAST32 "d"
-#define SCNdLEAST64 "I64d"

 #define SCNdFAST16 "hd"
 #define SCNdFAST32 "d"
-#define SCNdFAST64 "I64d"

-#define SCNdMAX "I64d"
 #define SCNdPTR "d"

 #define SCNi16 "hi"
 #define SCNi32 "i"
-#define SCNi64 "I64i"

 #define SCNiLEAST16 "hi"
 #define SCNiLEAST32 "i"
-#define SCNiLEAST64 "I64i"

 #define SCNiFAST16 "hi"
 #define SCNiFAST32 "i"
-#define SCNiFAST64 "I64i"

-#define SCNiMAX "I64i"
 #define SCNiPTR "i"

 #define SCNo16 "ho"
 #define SCNo32 "o"
-#define SCNo64 "I64o"

 #define SCNoLEAST16 "ho"
 #define SCNoLEAST32 "o"
-#define SCNoLEAST64 "I64o"

 #define SCNoFAST16 "ho"
 #define SCNoFAST32 "o"
-#define SCNoFAST64 "I64o"

-#define SCNoMAX "I64o"
 #define SCNoPTR "o"

 #define SCNx16 "hx"
 #define SCNx32 "x"
-#define SCNx64 "I64x"

 #define SCNxLEAST16 "hx"
 #define SCNxLEAST32 "x"
-#define SCNxLEAST64 "I64x"

 #define SCNxFAST16 "hx"
 #define SCNxFAST32 "x"
-#define SCNxFAST64 "I64x"

-#define SCNxMAX "I64x"
 #define SCNxPTR "x"


@@ -211,19 +225,64 @@

 #define SCNu16 "hu"
 #define SCNu32 "u"
-#define SCNu64 "I64u"

 #define SCNuLEAST16 "hu"
 #define SCNuLEAST32 "u"
-#define SCNuLEAST64 "I64u"

 #define SCNuFAST16 "hu"
 #define SCNuFAST32 "u"
-#define SCNuFAST64 "I64u"

-#define SCNuMAX "I64u"
 #define SCNuPTR "u"

+// mingw doesn't implement a C99 scanf (???????)
+#if 0
+
+#define SCNd64 "lld"
+#define SCNdLEAST64 "lld"
+#define SCNdFAST64 "lld"
+#define SCNdMAX "lld"
+#define SCNi64 "lli"
+#define SCNiLEAST64 "lli"
+#define SCNiFAST64 "lli"
+#define SCNiMAX "lli"
+#define SCNo64 "llo"
+#define SCNoLEAST64 "llo"
+#define SCNoFAST64 "llo"
+#define SCNoMAX "llo"
+#define SCNx64 "llx"
+#define SCNxLEAST64 "llx"
+#define SCNxFAST64 "llx"
+#define SCNxMAX "llx"
+#define SCNu64 "llu"
+#define SCNuLEAST64 "llu"
+#define SCNuFAST64 "llu"
+#define SCNuMAX "llu"
+
+#else
+
+#define SCNd64 "I64d"
+#define SCNdLEAST64 "I64d"
+#define SCNdFAST64 "I64d"
+#define SCNdMAX "I64d"
+#define SCNi64 "I64i"
+#define SCNiLEAST64 "I64i"
+#define SCNiFAST64 "I64i"
+#define SCNiMAX "I64i"
+#define SCNo64 "I64o"
+#define SCNoLEAST64 "I64o"
+#define SCNoFAST64 "I64o"
+#define SCNoMAX "I64o"
+#define SCNx64 "I64x"
+#define SCNxLEAST64 "I64x"
+#define SCNxFAST64 "I64x"
+#define SCNxMAX "I64x"
+#define SCNu64 "I64u"
+#define SCNuLEAST64 "I64u"
+#define SCNuFAST64 "I64u"
+#define SCNuMAX "I64u"
+
+#endif
+
 #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
 /*
  * no length modifier for char types prior to C9x
